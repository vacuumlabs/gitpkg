{"version":3,"sources":["../../../src/tasks/Publish/extract-tarball.js"],"names":["extractTarball","tarballPath","destPath","stream","fs","createReadStream","pipe","zlib","Unzip","tar","extract","Promise","resolve","reject","err"],"mappings":";;;;;kBAK8BA,c;;AAL9B;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,eAAeA,cAAf,CAA8BC,WAA9B,EAA2CC,QAA3C,EAAqD;AAClE,QAAMC,MAAM,GAAGC,aACZC,gBADY,CACKJ,WADL,EAEZK,IAFY,CAEP,IAAIC,eAAKC,KAAT,EAFO,EAGZF,IAHY,CAGPG,gBAAIC,OAAJ,CAAYR,QAAZ,CAHO,CAAf;;AAKA,SAAO,IAAIS,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,+BAAIV,MAAJ,EAAYW,GAAG,IAAI;AACjB,UAAIA,GAAJ,EAAS;AACP,eAAOD,MAAM,CAACC,GAAD,CAAb;AACD;;AACD,aAAOF,OAAO,EAAd;AACD,KALD;AAMD,GAPM,CAAP;AAQD","sourcesContent":["import fs from 'fs';\nimport end from 'end-of-stream';\nimport tar from 'tar-fs';\nimport zlib from 'zlib';\n\nexport default async function extractTarball(tarballPath, destPath) {\n  const stream = fs\n    .createReadStream(tarballPath)\n    .pipe(new zlib.Unzip())\n    .pipe(tar.extract(destPath));\n\n  return new Promise((resolve, reject) => {\n    end(stream, err => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve();\n    });\n  });\n}\n"],"file":"extract-tarball.js"}